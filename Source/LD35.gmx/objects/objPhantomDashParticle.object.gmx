<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// CONSTANTS //

//transparency 
MIN_ALPHA = 0.2;
MAX_ALPHA = 0.9;

//speed
MIN_FADE_SPEED = 0.01;
MAX_FADE_SPEED = 0.02;

//radius
MIN_RADIUS = 0.30;
//remember the max radius equal to a block would be 8
MAX_RADIUS = 7;

//spread from initial location
MIN_X_SPREAD = -3;
MAX_X_SPREAD = 3;

MIN_Y_SPREAD = -3;
MAX_Y_SPREAD = 3;

//angles
MIN_ANGLE_CHANGE = -10;
MAX_ANGLE_CHANGE = 10;
ANGLE_ACCEL = 1.5;

//speed of drifting
MIN_SPEED = 0;
MAX_SPEED = 2;

// VARIABLES //
//set the angle to a dummy for now
angle = -9999;

alpha = random_range(MIN_ALPHA, MAX_ALPHA);
color = make_color_rgb(88,88,88);
radius = random_range(MIN_RADIUS, MAX_RADIUS);
fade = random_range(MIN_FADE_SPEED, MAX_FADE_SPEED);
x_spread = random_range(MIN_X_SPREAD, MAX_X_SPREAD);
y_spread = random_range(MIN_Y_SPREAD, MAX_Y_SPREAD);
angle_spread = random_range(MIN_ANGLE_CHANGE, MAX_ANGLE_CHANGE);
drift_speed = random_range(MIN_SPEED, MAX_SPEED);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//every frame decrease alpha by the value and if alpha is less than or equal to 0 destroy it

//decrement the alpha by the fade
alpha -= fade;

//check if it is beyond faded
if (alpha &lt;= 0)
{
    instance_destroy();    
}

//update position
if (angle_spread &gt; 0)
{
    angle_spread += ANGLE_ACCEL;
}
else
{
    angle_spread -= ANGLE_ACCEL;
}
x += lengthdir_x(drift_speed, angle + angle_spread);
y += lengthdir_y(drift_speed, angle + angle_spread);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(alpha);
draw_set_color(color);
draw_circle(x + x_spread , y + y_spread, radius, false);

// reset drawing
draw_set_alpha(1);
draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
