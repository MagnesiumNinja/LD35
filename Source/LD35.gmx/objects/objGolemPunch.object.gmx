<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGolemPunch</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// CONSTANTS //

DAMAGE = 3;


// VARIABLES //

hit = false;
par = noone;
target = noone;
image_speed = 0.3;

audio_play_sound(choose(sndPunch_Swing1, sndPunch_Swing2), 9, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Death of attack
if (image_index &gt; image_number - image_speed)
{
    instance_destroy();
}

if (image_index &gt; 1)
    hit = true;
    
// Following the parent
if (par != noone &amp;&amp; instance_exists(par))
{
    x = par.x;
    y = par.y;
    
    // Hitting a breakable wall
    if (!hit)
    {
        var w = instance_place(x, y, objBreakableWall);
        if (w &amp;&amp; !w.broken)
        {
            w.broken = true;
            hit = true;
            
            audio_play_sound(choose(sndPunch_Hit1, sndPunch_Hit2), 10, false);
        }
    }
    
    // Hitting an enemy
    if (!hit)
    {
        var e;
        
        if (target == noone)
        {
            e = instance_place(x, y, objEnemyEntity);
        }
        else
        {
            e = instance_place(x, y, target);
        }
        
        if (e &amp;&amp; e.canBeHit &amp;&amp; !collision_line(par.x, par.y, e.x, e.y, objCollide, false, true))
        {
            e.prevHp = e.hp;
            e.hp = max(0, e.hp - DAMAGE);
            e.hitX = x;
            e.hitY = y;
              
            with (e) event_user(3);
            
            hit = true;
            
            audio_play_sound(choose(sndPunch_Hit1, sndPunch_Hit2), 10, false);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (par != noone &amp;&amp; instance_exists(par))
{
    draw_sprite_ext(sprite_index, image_index, par.x, par.y, image_xscale, image_yscale, image_angle, c_white, image_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
