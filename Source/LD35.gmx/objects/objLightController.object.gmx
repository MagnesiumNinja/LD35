<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// CONSTANTS //

OVERLAY_ALPHA = 0.8;
OVERLAY_COLOUR = c_black;

TINT_COLD_ALPHA = 0.3;
TINT_WARM_ALPHA = 0;
TINT_COLD_COLOUR = make_color_rgb(0, 0, 50);
TINT_WARM_COLOUR = c_orange;


// VARIABLES //

surface = surface_create(view_wview[0], view_hview[0]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Make sure the surface hasn't been destroyed
if (!surface_exists(surface)) 
{
    surface = surface_create(view_wview[0], view_hview[0]);
}


surface_set_target(surface);

// Clear old stuff
draw_set_blend_mode(bm_subtract);

draw_set_color(c_white);
draw_set_alpha(1);
draw_rectangle(0, 0, view_wview[0], view_hview[0], false);
draw_set_alpha(1);

draw_set_blend_mode(bm_normal);


// Darkness
draw_set_color(OVERLAY_COLOUR);
draw_set_alpha(OVERLAY_ALPHA);
draw_rectangle(0, 0, view_wview[0], view_hview[0], false);
draw_set_color(c_white);
draw_set_alpha(1);


draw_set_blend_mode(bm_subtract);

//Lights
draw_sprite_ext(sprLightPlayer, 0, objPlayer.x - view_xview[0], 
    objPlayer.y - view_yview[0], image_xscale, image_yscale, image_angle, c_white, 1);

with (objEnemyEntity)
{
    if (fowAlpha &gt; 0)
        draw_sprite_ext(sprLightEnemy, 0, x - view_xview[0], 
            y - view_yview[0], image_xscale, image_yscale, image_angle, c_white, 1);
}
    
    
draw_set_blend_mode(bm_normal);

surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Light colouring

// Cold tint
draw_set_blend_mode(bm_add)
draw_set_alpha(TINT_COLD_ALPHA)
draw_rectangle_color(view_xview[0], view_yview[0], view_xview[0] + view_wview[0], view_yview[0] + view_hview[0], 
    TINT_COLD_COLOUR, TINT_COLD_COLOUR, TINT_COLD_COLOUR, TINT_COLD_COLOUR, false)

// Player
with (objPlayer) 
{
    draw_sprite_ext(sprLightPlayer, 0, x, y, 1, 1, 0, objLightController.TINT_WARM_COLOUR, objLightController.TINT_WARM_ALPHA);
}    

with (objEnemyEntity)
{
    if (fowAlpha &gt; 0)
        draw_sprite_ext(sprLightEnemy, 0, x, y, 1, 1, 0, objLightController.TINT_WARM_COLOUR, objLightController.TINT_WARM_ALPHA);
}


draw_set_alpha(1);
draw_set_blend_mode(bm_normal);


//Actual lights
draw_surface(surface, view_xview[0], view_yview[0]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
