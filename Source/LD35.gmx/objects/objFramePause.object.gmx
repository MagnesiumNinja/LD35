<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9500</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// CONSTANTS //

FREEZE_DURATION = 5;


// SCREEN FREEZE //

// The surface to draw the freeze frame to
freezeSurface = surface_create(view_wview[0] * 2, view_hview[0] * 2);

// VARIABLES //

freezeDrawn = false;
done = false;

freezeLength = FREEZE_DURATION;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Freeze all objects once the overlay is drawn
if (freezeDrawn &amp;&amp; !done)
{
    instance_deactivate_all(true);
    
    // Reactivate key objects
    activateKeyObjects();
    
    // Activate effects
    instance_activate_object(objParticle);
       
    freezeLength--;
    
    if (freezeLength &lt;= 0)
    {
        instance_activate_all();
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw the screen to the surface

if (!freezeDrawn)
{  
    surface_set_target(freezeSurface);
    
    draw_clear_alpha(c_black, 0);
    draw_set_blend_mode_ext(bm_one, bm_inv_src_alpha);
    shader_set(sh_premultiply);
    
    draw_surface(application_surface, 0, 0);
    
    shader_reset();
    draw_set_blend_mode(bm_normal);
    surface_reset_target();
    
    freezeDrawn = true;
    
    depth = 0;
    with (objParticle)
    {
        visible = true;
    }
}
else
{
    if (view_current == 0)
    {  
        // Draw the surface
        if (surface_exists(freezeSurface))
        {
            draw_set_blend_mode_ext(bm_one, bm_inv_src_alpha);
            draw_surface_ext(freezeSurface, view_xview[0], view_yview[0], 0.5, 0.5, 0, c_white, 1);
            draw_set_blend_mode(bm_normal);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
