<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// VARIABLES //

// Speed
hspd = 0;
vspd = 0;

xPrev = x;
vPrev = y;
hspdPrev = 0;
vspdPrev = 0;

hCounter = 0;
vCounter = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement and collisions

var h, v, collide, slope;
   
// Update previous position and speed
xprev = x;
vprev = y;
hspdPrev = hspd;
vspdPrev = vspd;

// Add to the counters, then get the h and v (pixels to move this step) from them.
hCounter += hspd;
vCounter += vspd;
h = round( hCounter );
v = round( vCounter );
hCounter -= h;
vCounter -= v;

collide = false;
// Loop through the horizontal pixels to move this frame
repeat (abs(h))
{
    // If we are next to a collidable object, collide
    if (place_meeting(x + sign(h), y, objCollide))
    {
        collide = true;
        break;
    }
    else
    {
        // Move forward
        x += sign(h);  
    }
}

if (collide)
    event_perform(ev_other, ev_user0);
    
collide = false;

// Loop through the remaining vertical frames to move this frame
repeat (abs(v))
{
    // If we are next to a collidable object, collide
    if (place_meeting(x, y + sign(v), objCollide))
    {
        collide = true;
        break;
    }
    else
    {
        // Move forward
        y += sign(v);  
    }
}

if (collide)
    event_perform( ev_other, ev_user1 );
     
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
