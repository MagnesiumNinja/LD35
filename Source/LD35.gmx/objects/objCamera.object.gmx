<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>BASE_WIDTH = 640;
BASE_HEIGHT = 360;
CENTRE_X = room_width / 2;
CENTRE_Y = room_height / 2;
MOVE_FACTOR_X = 1.2;
MOVE_FACTOR_Y = 1.2;
CAMERA_SPEED = 1.5;
MIN_SCALE = 1;
SCALE_SHRINK = 0.005;
SCALE_GROW = 0.01;

CAMERA_DIVISOR = 4;
CONTROLLER_DIS = 240;

// VARIABLES //

xOff = 0;
yOff = 0;
dis = 0;
angle = 0;

// INITIALIZE VIEWS //

focus = noone;
scale = 1;

// Regular view
view_wview[0] = BASE_WIDTH;
view_hview[0] = BASE_HEIGHT;
view_object[0] = id;

global.CAMERA_OBJECT = id;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// POSITIONING //

if (instance_exists(objPlayer))
{   
    if (window_mouse_get_x() != global.MOUSE_XPREV || window_mouse_get_y() != global.MOUSE_YPREV)
    {
        angle = point_direction(objPlayer.x, objPlayer.y, mouse_x, mouse_y);
        dis = point_distance(objPlayer.x, objPlayer.y, mouse_x, mouse_y);
    }
    else if (gamepad_is_connected(0) &amp;&amp; gamepad_axis_value(0, gp_axisrh) &lt; -0.3 || gamepad_axis_value(0, gp_axisrh) &gt; 0.3 ||
        gamepad_axis_value(0, gp_axisrv) &lt; -0.3 || gamepad_axis_value(0, gp_axisrv) &gt; 0.3)
    {
        var axisH = gamepad_axis_value(0, gp_axisrh);
        var axisV = gamepad_axis_value(0, gp_axisrv);
        var length = sqrt(sqr(axisH) + sqr(axisV)) / sqrt(2);
        
        angle = point_direction(0, 0, axisH, axisV);
        dis = CONTROLLER_DIS * length;
    }
    
        
    x = objPlayer.x + lengthdir_x(dis / CAMERA_DIVISOR, angle);
    y = objPlayer.y + lengthdir_y(dis / CAMERA_DIVISOR, angle);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
