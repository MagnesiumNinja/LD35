<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// CONSTANTS //

TITLE_Y_OFF = 160;
CONTENT_Y_OFF = 360;

FADE_RATE = 0.01;
WAIT_IN_TIME = 240;
WAIT_OUT_TIME = 60;


// VARIABLES //

state = 0;
alpha = 0;
waitTime = WAIT_OUT_TIME;

makeTextbox("Scuttle", "... Huh?", true, c_white);
makeTextbox("Scuttle", "What is this? Where's the gang leader?", true, c_white);
makeTextbox("Scuttle", "Don't tell me those creeps were running this place in a democratic fashion!", true, c_white);
makeTextbox("Scuttle", "How am I supposed to take over now?", true, c_white);
makeTextbox("Scuttle", "... Shoot.", true, c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Returning to menu
if (keyboard_check_pressed(vk_escape) &amp;&amp; !instance_exists(objScreenTransition))
{
    var trans = instance_create(x, y, objScreenTransition);
    trans.rm = rmMenu;
}


if (!instance_exists(objTextbox))
{
    // State change
    
    switch(state)
    {
        case 0: // Fade in Completion screen
        {
            if (waitTime &gt; 0)
                waitTime--;
            else
            {
                if (alpha &lt; 1)
                {
                    alpha = approach(alpha, 1, FADE_RATE);
                }
                else
                {
                    state++;
                    waitTime = WAIT_IN_TIME;
                }
            }
        
            break;
        }
        
        case 1: // Wait completion screen
        {
            if (waitTime &gt; 0)
                waitTime--;
            else
            {
                state++;
                waitTime = WAIT_OUT_TIME;
            }
        
            break;
        }
        
        case 2: // Fade out completion screen
        {
            if (alpha &gt; 0)
            {
                alpha = approach(alpha, 0, FADE_RATE);
            }
            else
            {
                state++;
            }
        
            break;
        }
        
        case 3: // Wait after completion screen
        {
            if (waitTime &gt; 0)
                waitTime--;
            else
            {
                state++;
                waitTime = WAIT_IN_TIME;
            }
        
            break;
        }
    
        case 4: // Fade in Credits screen
        {
            if (alpha &lt; 1)
            {
                alpha = approach(alpha, 1, FADE_RATE);
            }
            else
            {
                state++;
            }
        
            break;
        }
        
        case 5: // Wait Credits screen
        {
            if (waitTime &gt; 0)
                waitTime--;
            else
            {
                state++;
                waitTime = WAIT_OUT_TIME;
            }
        
            break;
        }
        
        case 6: // Fade out Credits screen
        {
            if (alpha &gt; 0)
            {
                alpha = approach(alpha, 0, FADE_RATE);
            }
            else
            {
                state++;
            }
        
            break;
        }
        
        case 7: // Wait after Credits screen
        {
            if (waitTime &gt; 0)
                waitTime--;
            else
            {
                state++;
                waitTime = WAIT_IN_TIME;
            }
        
            break;
        }
        
        case 8: // Fade in Special Thanks screen
        {
            if (alpha &lt; 1)
            {
                alpha = approach(alpha, 1, FADE_RATE);
            }
            else
            {
                state++;
            }
        
            break;
        }
        
        case 9: // Wait Special Thanks screen
        {
            if (waitTime &gt; 0)
                waitTime--;
            else
            {
                state++;
                waitTime = WAIT_OUT_TIME;
            }
        
            break;
        }
        
        case 10: // Fade out Special Thanks screen
        {
            if (alpha &gt; 0)
            {
                alpha = approach(alpha, 0, FADE_RATE);
            }
            else
            {
                state++;
            }
        
            break;
        }
        
        case 11: // Wait after Special Thanks screen
        {
            if (!instance_exists(objScreenTransition))
            {
                var trans = instance_create(0, 0, objScreenTransition);
                trans.rm = rmMenu;
            }
        
            break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fntCreditsTitle);
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_alpha(alpha);

// Title
var titleText = "";

switch(state)
{
    case 0:
    case 1:
    case 2:
    {
        titleText = "Congratulations!";
        break;
    }

    case 4:
    case 5:
    case 6:
    {
        titleText = "Jam Team";
        break;
    }
    
    case 8:
    case 9:
    case 10:
    {
        titleText = "Special Thanks";
        break;
    }
}

draw_text(view_wport[0] / 2, TITLE_Y_OFF, titleText);


// Content
draw_set_font(fntCreditsContent);

var contentText = "";

switch(state)
{
    case 0:
    case 1:
    case 2:
    {   
        // Calculate time
        var ms, s, m;
        ms = floor(global.TIME / 0.06);
        
        s = floor(ms / 1000);
        ms -= s * 1000;
        
        m = floor(s / 60);
        s -= m * 60;
        
        var timeString = "";
        
        if (ms &gt; 99)
        {
            timeString =
                    string_repeat("0", 2 - string_length(string(m))) + string(m) + ":" + 
                    string_repeat("0", 2 - string_length(string(s))) + string(s) + ":" + 
                    string_repeat("0", 2 - string_length(string_copy(string(ms), 0, 2))) + string_copy(string(ms), 0, 2);
        }
        else
        {
            timeString =
                    string_repeat("0", 2 - string_length(string(m))) + string(m) + ":" + 
                    string_repeat("0", 2 - string_length(string(s))) + string(s) + ":" + 
                    string_repeat("0", 2 - string_length(string_copy(string(ms), 1, 1))) + string_copy(string(ms), 1, 1);
        }   
        
        contentText = "Time: " + timeString + "#Deaths: " + string(global.DEATHS);
        break;
    }

    case 4:
    case 5:
    case 6:
    {
        contentText = "Chris Klassen#Rhea Lauzon#Justin Wang";
        break;
    }
    
    case 8:
    case 9:
    case 10:
    {
        contentText = "Raymond Larabie - Effloresce Font#Qwerks - Quikhand Font#Sonniss.com - Sound Resources";
        break;
    }
}

draw_text(view_wport[0] / 2, CONTENT_Y_OFF, contentText);

draw_set_alpha(1);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
