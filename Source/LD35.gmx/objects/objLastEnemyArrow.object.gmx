<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprLastEnemyArrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// CONSTANTS //

FADE_RATE = 0.05;


// VARIABLES //

image_alpha = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_number(objEnemyEntity) &gt; 0)
{
    var enemy = objEnemyEntity;

    if (!(enemy.x &gt;= view_xview[0] &amp;&amp; enemy.x &lt;= view_xview[0] + view_wview[0] &amp;&amp;
        enemy.y &gt;= view_yview[0] &amp;&amp; enemy.y &lt;= view_yview[0] + view_hview[0]))
    {
        image_alpha = approach(image_alpha, 1, FADE_RATE);
        
        image_angle = point_direction(objPlayer.x, objPlayer.y, objEnemyEntity.x, objEnemyEntity.y);
    }
    else
    {
        if (image_alpha &gt; 0)
            image_alpha = approach(image_alpha, 0, FADE_RATE);
    }
}
else
{
    var obj = objEOL;

    if (!(obj.x &gt;= view_xview[0] &amp;&amp; obj.x &lt;= view_xview[0] + view_wview[0] &amp;&amp;
        obj.y &gt;= view_yview[0] &amp;&amp; obj.y &lt;= view_yview[0] + view_hview[0]))
    {
        image_alpha = approach(image_alpha, 1, FADE_RATE);
        
        image_angle = point_direction(objPlayer.x, objPlayer.y, obj.x, obj.y);
    }
    else
    {
        if (image_alpha &gt; 0)
            image_alpha = approach(image_alpha, 0, FADE_RATE);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, objPlayer.x, objPlayer.y, 1, 1, image_angle, c_white, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
